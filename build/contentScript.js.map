{"version":3,"file":"contentScript.js","mappings":";;;;;;AAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA","sources":["webpack://binance-leaderboard-newtab/./src/contentScript.ts"],"sourcesContent":["'use strict';\n// Content script file will run in the context of web page.\n// With content script you can manipulate the web pages using\n// Document Object Model (DOM).\n// You can also pass information to the parent extension.\n// We execute this script by making an entry in manifest.json file\n// under `content_scripts` property\n// For more information on Content Scripts,\n// See https://developer.chrome.com/extensions/content_scripts\nlet clickedElement;\nchrome.runtime.onMessage.addListener((request, sender, sendResponse) => {\n    switch (request.type) {\n        case 'open_trader_in_new_tab_active':\n        case 'open_trader_in_new_tab':\n            const name = getName();\n            if (name) {\n                sendResponse([name]);\n            }\n            break;\n        case 'open_all_traders_in_new_tab':\n            const names = getNames();\n            if (names.length) {\n                sendResponse(names);\n                return true;\n            }\n            break;\n        default:\n            break;\n    }\n});\nwindow.addEventListener('DOMContentLoaded', (event) => {\n    document.addEventListener('mousedown', (event) => {\n        clickedElement = event.target;\n    }, false);\n});\nfunction getName() {\n    const traderCardElement = clickedElement === null || clickedElement === void 0 ? void 0 : clickedElement.closest('.TraderCard');\n    const nameElement = traderCardElement === null || traderCardElement === void 0 ? void 0 : traderCardElement.querySelector('.name');\n    const name = nameElement === null || nameElement === void 0 ? void 0 : nameElement.textContent;\n    return name;\n}\nfunction getNames() {\n    const nameElements = document.querySelectorAll('.TraderCard .name');\n    const names = Array.from(nameElements)\n        .map((element) => {\n        return element.textContent;\n    })\n        .filter((value) => {\n        return value !== null;\n    });\n    return names;\n}\n"],"names":[],"sourceRoot":""}