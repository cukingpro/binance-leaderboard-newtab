{"version":3,"file":"background.js","mappings":";;;;;;;;;;AAAa;AACb;AACA,4BAA4B,+DAA+D,iBAAiB;AAC5G;AACA,oCAAoC,MAAM,+BAA+B,YAAY;AACrF,mCAAmC,MAAM,mCAAmC,YAAY;AACxF,gCAAgC;AAChC;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,0FAA0F,GAAG;AAC7F;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;;;;;;;UEtEA;UACA;UACA;UACA;UACA","sources":["webpack://binance-leaderboard-newtab/./src/background.ts","webpack://binance-leaderboard-newtab/webpack/before-startup","webpack://binance-leaderboard-newtab/webpack/startup","webpack://binance-leaderboard-newtab/webpack/after-startup"],"sourcesContent":["'use strict';\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n// With background scripts you can communicate with popup\n// and contentScript files.\n// For more information on background script,\n// See https://developer.chrome.com/extensions/background_pages\nchrome.runtime.onInstalled.addListener((details) => {\n    chrome.contextMenus.create({\n        title: 'Open trader in new tab - Active',\n        id: 'open_trader_in_new_tab_active',\n        contexts: ['all'],\n    });\n    chrome.contextMenus.create({\n        title: 'Open trader in new tab',\n        id: 'open_trader_in_new_tab',\n        contexts: ['all'],\n    });\n    chrome.contextMenus.create({\n        title: 'Open all traders in new tab',\n        id: 'open_all_traders_in_new_tab',\n        contexts: ['all'],\n    });\n});\nchrome.contextMenus.onClicked.addListener((info, tab) => {\n    if (tab === null || tab === void 0 ? void 0 : tab.id) {\n        let message = {\n            type: info.menuItemId,\n        };\n        chrome.tabs.sendMessage(tab.id, message, (names) => {\n            handleOpenInNewTab(names, info.menuItemId === 'open_trader_in_new_tab_active');\n        });\n    }\n});\nfunction getId(name) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const response = yield fetch('https://www.binance.com/bapi/futures/v1/public/future/leaderboard/searchNickname', {\n            method: 'POST',\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                nickname: name,\n            }),\n        });\n        const json = yield response.json();\n        return json['data'][0]['encryptedUid'];\n    });\n}\nfunction openInNewTab(id, active) {\n    chrome.tabs.create({\n        url: `https://www.binance.com/en/futures-activity/leaderboard/user?encryptedUid=${id}`,\n        active: active,\n    });\n}\nfunction handleOpenInNewTab(names, active) {\n    return __awaiter(this, void 0, void 0, function* () {\n        for (const name of names) {\n            const id = yield getId(name);\n            openInNewTab(id, active);\n        }\n    });\n}\n","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = {};\n__webpack_modules__[\"./src/background.ts\"]();\n",""],"names":[],"sourceRoot":""}